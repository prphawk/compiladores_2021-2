
GrupoA

~/ensino/private/comp/e3/GrupoA ~/ensino/private/comp/e3
4a5
> 
16c17
<   exporta (arvore);
---
>   exporta(arvore);
bison -d parser.y
flex scanner.l
gcc -c main.c lex.yy.c parser.tab.c token.c arvore.c
gcc -o etapa3 main.o lex.yy.o parser.tab.o token.o arvore.o -lfl
~/ensino/private/comp/e3

GrupoB

~/ensino/private/comp/e3/GrupoB ~/ensino/private/comp/e3
2,3c2,3
<   Função principal para realização da E3.
<   Não modifique este arquivo.
---
> Função principal para realização da E3.
> Este arquivo será posterioremente substituído, não acrescente nada.
4a5
> 
15c16
<   int ret = yyparse(); 
---
>   int ret = yyparse();
17c18
<   libera(arvore);
---
>   libera (arvore);
21c22
< }
---
> }
\ No newline at end of file
bison -d -v parser.y
flex -o lex.yy.c scanner.l
gcc -g -c lex.yy.c parser.tab.c main.c tokenData.c ast.c
gcc -o etapa3 main.o lex.yy.o parser.tab.o tokenData.o ast.o -lfl
~/ensino/private/comp/e3

GrupoC

~/ensino/private/comp/e3/GrupoC ~/ensino/private/comp/e3
bison -d parser.y
flex -o scanner.lex.c scanner.l
gcc -o etapa3 main.c scanner.lex.c parser.tab.c -lfl -lm
~/ensino/private/comp/e3

GrupoD

~/ensino/private/comp/e3/GrupoD ~/ensino/private/comp/e3
rm lex.yy.* parser.tab.* main.o ast.o etapa3
rm: cannot remove 'lex.yy.*': No such file or directory
rm: cannot remove 'parser.tab.*': No such file or directory
rm: cannot remove 'main.o': No such file or directory
rm: cannot remove 'ast.o': No such file or directory
rm: cannot remove 'etapa3': No such file or directory
make: *** [Makefile:15: clean] Error 1
1,21c1,22
< /*
<   Função principal para realização da E3.
<   Não modifique este arquivo.
< */
< #include <stdio.h>
< extern int yyparse(void);
< extern int yylex_destroy(void);
< 
< void *arvore = NULL;
< void exporta (void *arvore);
< void libera (void *arvore);
< 
< int main (int argc, char **argv)
< {
<   int ret = yyparse(); 
<   exporta (arvore);
<   libera(arvore);
<   arvore = NULL;
<   yylex_destroy();
<   return ret;
< }
---
> /*
>   Função principal para realização da E3.
>   Não modifique este arquivo.
> */
> #include <stdio.h>
> #include <string.h>
> extern int yyparse(void);
> extern int yylex_destroy(void);
> 
> void *arvore = NULL;
> void exporta (void *arvore);
> void libera (void *arvore);
> 
> int main (int argc, char **argv)
> {
>   int ret = yyparse(); 
>   exporta (arvore);
>   libera(arvore);
>   arvore = NULL;
>   yylex_destroy();
>   return ret;
> }
flex scanner.l
bison -d parser.y --report-file=FILE
gcc -g -c lex.yy.c main.c ast.c parser.tab.c
gcc -g -o etapa3 lex.yy.o parser.tab.o main.o ast.o -lfl
~/ensino/private/comp/e3

GrupoE

~/ensino/private/comp/e3/GrupoE ~/ensino/private/comp/e3
15c15
<   int ret = yyparse(); 
---
>   int ret = yyparse();
bison -d parser.y
flex scanner.l
gcc -c -w lex.yy.c parser.tab.c lexeme.c main.c ast.c
gcc -g -w -o etapa3 lex.yy.o main.o lexeme.o ast.o -lfl parser.tab.c parser.tab.h
~/ensino/private/comp/e3

GrupoG

~/ensino/private/comp/e3/GrupoG ~/ensino/private/comp/e3
21c21
< }
---
> }
\ No newline at end of file
compilando...
flex scanner.l
bison -d parser.y
gcc -c lex.yy.c parser.tab.c main.c ast.c
In file included from scanner.l:9:
parser.y:17:5: error: unknown type name ‘VALOR_LEXICO’
   17 |     VALOR_LEXICO *symbol;       //folhas
      |     ^~~~~~~~~~~~
parser.y:18:5: error: unknown type name ‘AST’
   18 |     AST *ast;                   //nodos intermediarios
      |     ^~~
scanner.l: In function ‘yylex’:
scanner.l:102:10: error: incompatible types when assigning to type ‘YYSTYPE’ from type ‘int’
  102 |  /* Inspiracao https://bitbucket.org/schnorr/calc/src/master/calc.l */
      |          ^~~~
scanner.l:104:10: error: incompatible types when assigning to type ‘YYSTYPE’ from type ‘double’
  104 | false                                       { yylval=false; return TK_LIT_FALSE; }
      |          ^~~~
scanner.l:105:10: error: ‘false’ undeclared (first use in this function)
  105 | true                                        { yylval=true; return TK_LIT_TRUE; }
      |          ^~~~~
scanner.l:10:1: note: ‘false’ is defined in header ‘<stdbool.h>’; did you forget to ‘#include <stdbool.h>’?
    9 |     #include "parser.tab.h"
  +++ |+#include <stdbool.h>
   10 |     int get_line_number(void);
scanner.l:105:10: note: each undeclared identifier is reported only once for each function it appears in
  105 | true                                        { yylval=true; return TK_LIT_TRUE; }
      |          ^~~~~
scanner.l:106:10: error: ‘true’ undeclared (first use in this function)
  106 | '[^']?'                                     { yylval=yytext; return TK_LIT_CHAR; }
      |          ^~~~
scanner.l:10:1: note: ‘true’ is defined in header ‘<stdbool.h>’; did you forget to ‘#include <stdbool.h>’?
    9 |     #include "parser.tab.h"
  +++ |+#include <stdbool.h>
   10 |     int get_line_number(void);
scanner.l:107:10: error: incompatible types when assigning to type ‘YYSTYPE’ from type ‘char *’
  107 | '[^']{2,}'                                  { return TOKEN_ERRO; }
      |          ^~~~~~
scanner.l:110:10: error: incompatible types when assigning to type ‘YYSTYPE’ from type ‘char *’
  110 | 
      |          ^     
parser.y: In function ‘yyparse’:
parser.y:117:77: error: expected expression before ‘{’ token
  117 | programa: decl_var_global programa  {$$ = astCreate(AST_programa,0,{$1,$2});}
      |                                                                             ^
parser.y:118:77: error: expected expression before ‘{’ token
  118 |         | funtion programa          {$$ = astCreate(AST_programa,0,{$1,$2});}
      |                                                                             ^
parser.y:122:116: error: expected expression before ‘{’ token
  122 | decl_var_global: opt_static type_ifcbs variables_global_name ';'    {$$ = astCreate(AST_decl_var_global,0,{$1,$2,$3});}
      |                                                                                                                    ^
parser.y:125:138: error: expected expression before ‘{’ token
  125 | variables_global_name: TK_IDENTIFICADOR aditional_variables_global_name             {$$ = astCreate(AST_variables_global_name,0,{$1,$2});}
      |                                                                                                                                          ^
parser.y:126:138: error: expected expression before ‘{’ token
  126 |         | TK_IDENTIFICADOR '[' TK_LIT_INT ']' aditional_variables_global_name       {$$ = astCreate(AST_variables_global_name,0,{$1,$3,$5});}
      |                                                                                                                                          ^
parser.y:128:150: error: expected expression before ‘{’ token
  128 | aditional_variables_global_name: ',' TK_IDENTIFICADOR aditional_variables_global_name {$$ = astCreate(AST_aditional_variables_global_name,0,{$2,$3});}
      |                                                                                                                                                      ^
parser.y:129:148: error: expected expression before ‘{’ token
  129 |         | ',' TK_IDENTIFICADOR '[' TK_LIT_INT ']' aditional_variables_global_name   {$$ = astCreate(AST_aditional_variables_global_name,0,{$2,$4,$6});}
      |                                                                                                                                                    ^
parser.y:134:62: error: ‘AST_function’ undeclared (first use in this function); did you mean ‘AST_funtion’?
  134 | funtion: func_header func_body      {$$ = astCreate(AST_function,0,{$1,$2});}
      |                                                              ^~~~~~~~~~~~
      |                                                              AST_funtion
parser.y:134:62: note: each undeclared identifier is reported only once for each function it appears in
parser.y:134:77: error: expected expression before ‘{’ token
  134 | funtion: func_header func_body      {$$ = astCreate(AST_function,0,{$1,$2});}
      |                                                                             ^
parser.y:137:106: error: ‘AST_function_header’ undeclared (first use in this function); did you mean ‘AST_func_header’?
  137 | func_header: opt_static type_ifcbs TK_IDENTIFICADOR '(' parameter_list ')'      {$$ = astCreate(AST_function_header,0,{$1,$2,$3,$5});}
      |                                                                                                          ^~~~~~~~~~~~~~~~~~~
      |                                                                                                          AST_func_header
parser.y:137:128: error: expected expression before ‘{’ token
  137 | func_header: opt_static type_ifcbs TK_IDENTIFICADOR '(' parameter_list ')'      {$$ = astCreate(AST_function_header,0,{$1,$2,$3,$5});}
      |                                                                                                                                ^
parser.y:139:127: error: expected expression before ‘{’ token
  139 | parameter_list: opt_const type_ifcbs TK_IDENTIFICADOR aditional_parameters      {$$ = astCreate(AST_parameter_list,0,{$1,$2,$3,$4});}
      |                                                                                                                               ^
parser.y:142:114: error: ‘AST_parameters’ undeclared (first use in this function); did you mean ‘AST_parameter_list’?
  142 | aditional_parameters: ',' opt_const type_ifcbs TK_IDENTIFICADOR aditional_parameters    {$$ = astCreate(AST_parameters,0,{$2,$3,$4,$5});}
      |                                                                                                                  ^~~~~~~~~~~~~~
      |                                                                                                                  AST_parameter_list
parser.y:142:131: error: expected expression before ‘{’ token
  142 | aditional_parameters: ',' opt_const type_ifcbs TK_IDENTIFICADOR aditional_parameters    {$$ = astCreate(AST_parameters,0,{$2,$3,$4,$5});}
      |                                                                                                                                   ^
parser.y:146:86: error: expected expression before ‘{’ token
  146 | func_body: command_block                    {$$ = astCreate(AST_func_body,0,{$1});}
      |                                                                                      ^
parser.y:148:70: error: ‘AST_comand_block’ undeclared (first use in this function); did you mean ‘AST_command_block’?
  148 | command_block: '{' command_simple '}'       {$$ = astCreate(AST_comand_block,0,{$2});}
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      AST_command_block
parser.y:148:89: error: expected expression before ‘{’ token
  148 | command_block: '{' command_simple '}'       {$$ = astCreate(AST_comand_block,0,{$2});}
      |                                                                                         ^
parser.y:150:70: error: ‘AST_comand_simple’ undeclared (first use in this function); did you mean ‘AST_command_simple’?
  150 | command_simple: decl_var ';' command_simple {$$ = astCreate(AST_comand_simple,0,{$1,$3});}
      |                                                                      ^~~~~~~~~~~~~~~~~
      |                                                                      AST_command_simple
parser.y:150:90: error: expected expression before ‘{’ token
  150 | command_simple: decl_var ';' command_simple {$$ = astCreate(AST_comand_simple,0,{$1,$3});}
      |                                                                                          ^
parser.y:151:90: error: expected expression before ‘{’ token
  151 |         | assignment ';'  command_simple    {$$ = astCreate(AST_comand_simple,0,{$1,$3});}
      |                                                                                          ^
parser.y:152:90: error: expected expression before ‘{’ token
  152 |         | input ';' command_simple          {$$ = astCreate(AST_comand_simple,0,{$1,$3});}
      |                                                                                          ^
parser.y:153:90: error: expected expression before ‘{’ token
  153 |         | output ';' command_simple         {$$ = astCreate(AST_comand_simple,0,{$1,$3});}
      |                                                                                          ^
parser.y:154:90: error: expected expression before ‘{’ token
  154 |         | func_call ';' command_simple      {$$ = astCreate(AST_comand_simple,0,{$1,$3});}
      |                                                                                          ^
parser.y:155:90: error: expected expression before ‘{’ token
  155 |         | shift ';' command_simple          {$$ = astCreate(AST_comand_simple,0,{$1,$3});}
      |                                                                                          ^
parser.y:156:90: error: expected expression before ‘{’ token
  156 |         | flow_control ';' command_simple   {$$ = astCreate(AST_comand_simple,0,{$1,$3});}
      |                                                                                          ^
parser.y:157:90: error: expected expression before ‘{’ token
  157 |         | return ';' command_simple         {$$ = astCreate(AST_comand_simple,0,{$1,$3});}
      |                                                                                          ^
parser.y:158:90: error: expected expression before ‘{’ token
  158 |         | '{' command_simple '}' ';'        {$$ = astCreate(AST_comand_simple,0,{$2});}
      |                                                                                          ^
parser.y:162:149: error: expected expression before ‘{’ token
  162 | decl_var: opt_static opt_const type_ifcbs variables_local_name                                              {$$ = astCreate(AST_decl_var,0,{$1,$2,$3,$4});}
      |                                                                                                                                                     ^
parser.y:164:161: error: expected expression before ‘{’ token
  164 | variables_local_name: TK_IDENTIFICADOR opt_set_ident_or_lit aditional_variables_local_name                  {$$ = astCreate(AST_variables_local_name,0,{$1,$2,$3});}
      |                                                                                                                                                                 ^
parser.y:166:171: error: expected expression before ‘{’ token
  166 | aditional_variables_local_name: ',' TK_IDENTIFICADOR opt_set_ident_or_lit aditional_variables_local_name    {$$ = astCreate(AST_aditional_variables_local_name,0,{$2,$3,$4});}
      |                                                                                                                                                                           ^
parser.y:171:127: error: expected expression before ‘{’ token
  171 | assignment: TK_IDENTIFICADOR opt_expression_brakets '=' expression                  {$$ = astCreate(AST_assignment,0,{$1,$2,$4});}
      |                                                                                                                               ^
parser.y:174:122: error: expected expression before ‘{’ token
  174 | input: TK_PR_INPUT TK_IDENTIFICADOR                                                 {$$ = astCreate(AST_input,0,{$1,$2});}
      |                                                                                                                          ^
parser.y:177:123: error: expected expression before ‘{’ token
  177 | output: TK_PR_OUTPUT ident_or_lit                                                   {$$ = astCreate(AST_output,0,{$1,$2});}
      |                                                                                                                           ^
parser.y:180:126: error: expected expression before ‘{’ token
  180 | func_call: TK_IDENTIFICADOR '(' arguments_or_expressions ')'                        {$$ = astCreate(AST_func_call,0,{$1,$3});}
      |                                                                                                                              ^
parser.y:183:122: error: expected expression before ‘{’ token
  183 | shift: TK_IDENTIFICADOR opt_expression_brakets sl_or_sr TK_LIT_INT                  {$$ = astCreate(AST_shift,0,{$1,$2,$3,$4});}
      |                                                                                                                          ^
parser.y:186:129: error: expected expression before ‘{’ token
  186 | flow_control: TK_PR_IF '(' expression ')' command_block                             {$$ = astCreate(AST_flow_control,0,{$1,$3,$5});}
      |                                                                                                                                 ^
parser.y:187:129: error: expected expression before ‘{’ token
  187 |         | TK_PR_IF '(' expression ')' command_block TK_PR_ELSE command_block        {$$ = astCreate(AST_flow_control,0,{$1,$3,$5,$6,$7});}
      |                                                                                                                                 ^
parser.y:188:129: error: expected expression before ‘{’ token
  188 |         | TK_PR_FOR '(' assignment ':' expression ':' assignment ')' command_block  {$$ = astCreate(AST_flow_control,0,{$1,$3,$5,$7,$9});}
      |                                                                                                                                 ^
parser.y:189:129: error: expected expression before ‘{’ token
  189 |         | TK_PR_WHILE '(' expression ')' TK_PR_DO command_block                     {$$ = astCreate(AST_flow_control,0,{$1,$3,$5,$6});}
      |                                                                                                                                 ^
parser.y:192:75: error: expected expression before ‘{’ token
  192 | return:  TK_PR_RETURN expression    {$$ = astCreate(AST_return,0,{$1,$2});}
      |                                                                           ^
parser.y:193:91: error: expected expression before ‘{’ token
  193 |         | TK_PR_BREAK               {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                           ^
parser.y:194:91: error: expected expression before ‘{’ token
  194 |         | TK_PR_CONTINUE            {$$ = astCreate(AST_SYMBOL,$1,{};)}
      |                                                                                           ^
parser.y:194:95: error: expected ‘;’ before ‘}’ token
  194 |         | TK_PR_CONTINUE            {$$ = astCreate(AST_SYMBOL,$1,{};)}
      |                                                                                               ^
      |                                                                                               ;
parser.y:197:133: error: expected expression before ‘{’ token
  197 | arguments_or_expressions: expression aditional_arguments_or_expressions     {$$ = astCreate(AST_arguments_or_expressions,0,{$1,$2});}
      |                                                                                                                                     ^
parser.y:198:133: error: expected expression before ‘{’ token
  198 |         | TK_LIT_CHAR aditional_arguments_or_expressions                    {$$ = astCreate(AST_arguments_or_expressions,0,{$1,$2});}
      |                                                                                                                                     ^
parser.y:199:133: error: expected expression before ‘{’ token
  199 |         | TK_LIT_STRING aditional_arguments_or_expressions                  {$$ = astCreate(AST_arguments_or_expressions,0,{$1,$2});}
      |                                                                                                                                     ^
parser.y:202:155: error: expected expression before ‘{’ token
  202 | aditional_arguments_or_expressions: ',' expression aditional_arguments_or_expressions   {$$ = astCreate(AST_aditional_arguments_or_expressions,0,{$2,$3});}
      |                                                                                                                                                           ^
parser.y:203:155: error: expected expression before ‘{’ token
  203 |         | ',' TK_LIT_CHAR aditional_arguments_or_expressions                            {$$ = astCreate(AST_aditional_arguments_or_expressions,0,{$2,$3});}
      |                                                                                                                                                           ^
parser.y:204:155: error: expected expression before ‘{’ token
  204 |         | ',' TK_LIT_STRING aditional_arguments_or_expressions                          {$$ = astCreate(AST_aditional_arguments_or_expressions,0,{$2,$3});}
      |                                                                                                                                                           ^
parser.y:209:99: error: expected expression before ‘{’ token
  209 |         |   logic_exp '?' expression ':' expression     {$$ = astCreate(AST_expression,0,{$1,$3,$5});}
      |                                                                                                   ^
parser.y:213:135: error: expected expression before ‘{’ token
  213 | arithmetic_exp: '(' opt_arith_uni_op arithmetic_exp_terms  ')'                          {$$ = astCreate(AST_arithmetic_exp,0,{$2,$3});}
      |                                                                                                                                       ^
parser.y:214:135: error: expected expression before ‘{’ token
  214 |         | opt_arith_uni_op arithmetic_exp_terms                                         {$$ = astCreate(AST_arithmetic_exp,0,{$1,$2});}
      |                                                                                                                                       ^
parser.y:215:135: error: expected expression before ‘{’ token
  215 |         | '(' opt_arith_uni_op arithmetic_exp_terms  arith_bin_op arithmetic_exp')'     {$$ = astCreate(AST_arithmetic_exp,0,{$2,$3});}
      |                                                                                                                                       ^
parser.y:216:135: error: expected expression before ‘{’ token
  216 |         | opt_arith_uni_op arithmetic_exp_terms arith_bin_op arithmetic_exp             {$$ = astCreate(AST_arithmetic_exp,0,{$2,$3});}
      |                                                                                                                                       ^
parser.y:219:121: error: expected expression before ‘{’ token
  219 | arithmetic_exp_terms: TK_IDENTIFICADOR opt_expression_brakets       {$$ = astCreate(AST_arithmetic_exp_terms,0,{$1,$2});}
      |                                                                                                                         ^
parser.y:220:123: error: expected expression before ‘{’ token
  220 |         | TK_LIT_INT                                                {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                                                           ^
parser.y:221:123: error: expected expression before ‘{’ token
  221 |         | TK_LIT_FLOAT                                              {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                                                           ^
parser.y:226:110: error: expected expression before ‘{’ token
  226 | logic_exp: '(' arithmetic_exp relation_op arithmetic_exp ')'        {$$ = astCreate(AST_logic_exp,0,{$2,$3,$4});}
      |                                                                                                              ^
parser.y:227:110: error: expected expression before ‘{’ token
  227 |         | arithmetic_exp relation_op arithmetic_exp                 {$$ = astCreate(AST_logic_exp,0,{$1,$2,$3});}
      |                                                                                                              ^
parser.y:230:110: error: expected expression before ‘{’ token
  230 |         | logic_exp_terms logic_op logic_exp_terms                  {$$ = astCreate(AST_logic_exp,0,{$1,$2,$3});}
      |                                                                                                              ^
parser.y:231:110: error: expected expression before ‘{’ token
  231 |         | '(' logic_exp_terms logic_op logic_exp_terms ')'          {$$ = astCreate(AST_logic_exp,0,{$2,$3,$4});}
      |                                                                                                              ^
parser.y:237:123: error: expected expression before ‘{’ token
  237 | logic_exp_terms: '?' TK_LIT_TRUE                                    {$$ = astCreate(AST_SYMBOL,$2,{});}
      |                                                                                                                           ^
parser.y:238:123: error: expected expression before ‘{’ token
  238 |         | '?' TK_LIT_FALSE                                          {$$ = astCreate(AST_SYMBOL,$2,{});}
      |                                                                                                                           ^
parser.y:239:123: error: expected expression before ‘{’ token
  239 |         | TK_LIT_TRUE                                               {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                                                           ^
parser.y:240:123: error: expected expression before ‘{’ token
  240 |         | TK_LIT_FALSE                                              {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                                                           ^
parser.y:244:101: error: expected expression before ‘{’ token
  244 | opt_arith_uni_op: arith_uni_op opt_arith_uni_op     {$$ = astCreate(AST_opt_arith_uni_op,0,{$1,$2});}
      |                                                                                                     ^
parser.y:264:87: error: expected expression before ‘{’ token
  264 | relation_op:    TK_OC_LE        {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                       ^
parser.y:265:87: error: expected expression before ‘{’ token
  265 |                 | TK_OC_GE      {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                       ^
parser.y:266:87: error: expected expression before ‘{’ token
  266 |                 | TK_OC_EQ      {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                       ^
parser.y:267:87: error: expected expression before ‘{’ token
  267 |                 | TK_OC_NE      {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                       ^
parser.y:272:87: error: expected expression before ‘{’ token
  272 | logic_op:       TK_OC_AND       {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                       ^
parser.y:273:87: error: expected expression before ‘{’ token
  273 |                 | TK_OC_OR      {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                       ^
parser.y:278:83: error: expected expression before ‘{’ token
  278 | sl_or_sr: TK_OC_SL          {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:279:83: error: expected expression before ‘{’ token
  279 |         | TK_OC_SR          {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:287:83: error: expected expression before ‘{’ token
  287 | ident_or_lit: TK_LIT_INT    {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:288:83: error: expected expression before ‘{’ token
  288 |             | TK_LIT_FLOAT  {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:289:83: error: expected expression before ‘{’ token
  289 |             | TK_LIT_CHAR   {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:290:83: error: expected expression before ‘{’ token
  290 |             | TK_LIT_TRUE   {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:291:83: error: expected expression before ‘{’ token
  291 |             | TK_LIT_FALSE  {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:292:86: error: expected ‘)’ before ‘{’ token
  292 |             | TK_LIT_STRING     {$$ = astCreate(AST_SYMBOL,$1{});}
      |                                                         ~                            ^
      |                                                                                      )
parser.y:292:48: error: too few arguments to function ‘astCreate’
  292 |             | TK_LIT_STRING     {$$ = astCreate(AST_SYMBOL,$1{});}
      |                                                ^~~~~~~~~
In file included from parser.y:5:
ast.h:66:6: note: declared here
   66 | AST *astCreate(int type, VALOR_LEXICO *symbol, AST* s[]);
      |      ^~~~~~~~~
parser.y:293:91: error: expected expression before ‘{’ token
  293 |             | TK_IDENTIFICADOR      {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                           ^
parser.y:295:83: error: expected expression before ‘{’ token
  295 | opt_static: TK_PR_STATIC    {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:298:83: error: expected expression before ‘{’ token
  298 | opt_const: TK_PR_CONST      {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:302:83: error: expected expression before ‘{’ token
  302 | type_ifcbs: TK_PR_INT       {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:303:83: error: expected expression before ‘{’ token
  303 |             | TK_PR_FLOAT   {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:304:83: error: expected expression before ‘{’ token
  304 |             | TK_PR_CHAR    {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:305:83: error: expected expression before ‘{’ token
  305 |             | TK_PR_BOOL    {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
parser.y:306:83: error: expected expression before ‘{’ token
  306 |             | TK_PR_STRING  {$$ = astCreate(AST_SYMBOL,$1,{});}
      |                                                                                   ^
ast.c: In function ‘astCreate’:
ast.c:25:26: warning: ‘sizeof’ on array function parameter ‘s’ will return size of ‘AST **’ {aka ‘struct astnode **’} [-Wsizeof-array-argument]
   25 |     for(int i=0; i<sizeof(s); i++){
      |                          ^
ast.c:19:53: note: declared here
   19 | AST *astCreate(int type, VALOR_LEXICO *symbol, AST* s[])
      |                                                ~~~~~^~~
ast.c: In function ‘exporta’:
ast.c:35:22: error: invalid application of ‘sizeof’ to incomplete type ‘struct astnode *[]’
   35 | for(int i=0; i<sizeof(raiz->son); i++){
      |                      ^
make: *** [makefile:9: main] Error 1
~/ensino/private/comp/e3

GrupoH

~/ensino/private/comp/e3/GrupoH ~/ensino/private/comp/e3
2,3c2,3
<   Função principal para realização da E3.
<   Não modifique este arquivo.
---
> Função principal para realização da e3.
> Não modifique este arquivo.
10,11c10,11
< void exporta (void *arvore);
< void libera (void *arvore);
---
> void exporta(void *arvore);
> void libera(void *arvore);
15,21c15,21
<   int ret = yyparse(); 
<   exporta (arvore);
<   libera(arvore);
<   arvore = NULL;
<   yylex_destroy();
<   return ret;
< }
---
>     int ret = yyparse();
>     exporta(arvore);
>     libera(arvore);
>     arvore = NULL;
>     yylex_destroy();
>     return ret;
> }
\ No newline at end of file
bison -v -d parser.y
flex scanner.l
gcc -c lex.yy.c parser.tab.c yylvallib.c tree.c -g
gcc -o etapa3 main.c lex.yy.o parser.tab.o yylvallib.o tree.o -lfl -g
~/ensino/private/comp/e3

GrupoI

~/ensino/private/comp/e3/GrupoI ~/ensino/private/comp/e3
21c21
< }
---
> }
\ No newline at end of file
bison -d -v parser.y
flex -o lex.yy.c scanner.l
gcc -g -c main.c lex.yy.c parser.tab.c token.c tree.c
gcc -o etapa3 main.o lex.yy.o parser.tab.o token.o tree.o -lfl
~/ensino/private/comp/e3

GrupoJ

~/ensino/private/comp/e3/GrupoJ ~/ensino/private/comp/e3
5a6
> 
10,11c11,12
< void exporta (void *arvore);
< void libera (void *arvore);
---
> void exporta(void *arvore);
> void libera(void *arvore);
15,16c16,17
<   int ret = yyparse(); 
<   exporta (arvore);
---
>   int ret = yyparse();
>   exporta(arvore);
18c19
<   arvore = NULL;
---
>   arvore = NULL;  
bison -d parser.y -v 
flex scanner.l
gcc -c lex.yy.c parser.tab.c main.c asp.c util.c
gcc -o etapa3 lex.yy.o parser.tab.o main.o asp.o util.o -lfl
~/ensino/private/comp/e3

GrupoK

~/ensino/private/comp/e3/GrupoK ~/ensino/private/comp/e3
bison -d -Wcounterexamples parser.y
flex --yylineno scanner.l
gcc -c semanticTree.c
gcc -c main.c
gcc -c lex.yy.c parser.tab.c
parser.y: In function ‘yyerror’:
parser.y:489:59: warning: implicit declaration of function ‘get_line_number’ [-Wimplicit-function-declaration]
  489 |         fprintf(stderr, "%s in sentence at line %d\n", s, get_line_number());
      |                                                           ^~~~~~~~~~~~~~~
gcc -o etapa3 main.o lex.yy.o parser.tab.o semanticTree.o -lfl 
~/ensino/private/comp/e3

GrupoM

~/ensino/private/comp/e3/GrupoM ~/ensino/private/comp/e3
21c21
< }
---
> }
\ No newline at end of file
bison -d parser.y
flex scanner.l
gcc -c ./utils/ast.c
gcc -c lex.yy.c parser.tab.c main.c
gcc -o etapa3 lex.yy.o parser.tab.o ast.o main.o -ll
~/ensino/private/comp/e3

GrupoN

~/ensino/private/comp/e3/GrupoN ~/ensino/private/comp/e3
bison -d parser.y -v --report-file=debug
flex scanner.l
gcc -c main.c lex.yy.c parser.tab.c token_info.c tree.c
gcc -o etapa3 main.o lex.yy.o parser.tab.o token_info.o tree.o -lfl
~/ensino/private/comp/e3

GrupoO

~/ensino/private/comp/e3/GrupoO ~/ensino/private/comp/e3
5a6
> #include "hash.h"
12a14,15
> 
> 
15a19,21
> 
>   hashPrint();
> 
21c27
< }
---
> }
\ No newline at end of file
flex scanner.l
bison -d parser.y
gcc main.c hash.c AST.c lex.yy.c parser.tab.c -o etapa3 -lfl
~/ensino/private/comp/e3

GrupoP

~/ensino/private/comp/e3/GrupoP ~/ensino/private/comp/e3
21c21
< }
---
> }
\ No newline at end of file
rm -f etapa3
rm -f parser.tab.cpp parser.tab.hpp
rm -f parser.output
rm -f scanner.lex.cpp
rm -f valgrind-out.txt
bison -d -o parser.tab.cpp parser.y
flex -o scanner.lex.cpp scanner.l
g++ main.c parser.tab.cpp scanner.lex.cpp ASTNode.cpp TreeManagement.cpp -o etapa3 -ggdb3
~/ensino/private/comp/e3

GrupoT

~/ensino/private/comp/e3/GrupoT ~/ensino/private/comp/e3
1,21c1,21
< /*
<   Função principal para realização da E3.
<   Não modifique este arquivo.
< */
< #include <stdio.h>
< extern int yyparse(void);
< extern int yylex_destroy(void);
< 
< void *arvore = NULL;
< void exporta (void *arvore);
< void libera (void *arvore);
< 
< int main (int argc, char **argv)
< {
<   int ret = yyparse(); 
<   exporta (arvore);
<   libera(arvore);
<   arvore = NULL;
<   yylex_destroy();
<   return ret;
< }
---
> /*
>   Função principal para realização da E3.
>   Não modifique este arquivo.
> */
> #include <stdio.h>
> extern int yyparse(void);
> extern int yylex_destroy(void);
> 
> void *arvore = NULL;
> void exporta (void *arvore);
> void libera (void *arvore);
> 
> int main (int argc, char **argv)
> {
>   int ret = yyparse(); 
>   exporta(arvore);
>   libera(arvore);
>   arvore = NULL;
>   yylex_destroy();
>   return ret;
> }
\ No newline at end of file
gcc -c ast.c -o ast.o -Wall
bison -d -v parser.y --report-file parser.output
flex scanner.l
gcc -c main.c lex.yy.c 
gcc -c parser.tab.c
gcc -o etapa3 main.o ast.o lex.yy.o parser.tab.o -lfl -Wall
~/ensino/private/comp/e3
